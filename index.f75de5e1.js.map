{"mappings":"AAAA;AAEA,MAAM,QAAQ,SAAS,aAAa,CAAC;AACrC,MAAM,aAAa,SAAS,gBAAgB,CAAC;AAC7C,MAAM,SAAS;OAAI;CAAW,CAAC,GAAG,CAAC,CAAC,UAAY,QAAQ,UAAU;AAElE,SAAS,gBAAgB,CAAC,SAAS,CAAC;IAClC,MAAM,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC;IAE5B,IAAI,CAAC,IACH;IAGF,MAAM,cAAc,OAAO,OAAO,CAAC,GAAG,UAAU;IAChD,IAAI,OAAO,EAAE;IAEb,KAAK,MAAM,OAAO,MAAM,IAAI,CAC1B,KAAK,IAAI,CAAC;WAAI,IAAI,KAAK;KAAC,CAAC,GAAG,CAAC,CAAC,UAAY,QAAQ,SAAS;IAG7D,OAAO,KACJ,KAAK,CAAC,GAAG,IACT,GAAG,CAAC,CAAC;QACJ,OAAO,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,QAAQ,QAAQ,CAAC,MACnB,OAAO,OAAO,QAAQ,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK;YAG9C,OAAO,CAAC,UAAU,CAAC,UAAU;QAC/B;IACF,GACC,IAAI,CAAC,CAAC,GAAG;QACR,IAAI,OAAO,CAAC,CAAC,YAAY,KAAK,UAC5B,OAAO,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY;QAGxC,OAAO,CAAC,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY;IACpD,GACC,GAAG,CAAC,CAAC;QACJ,OAAO,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,IAAI,OAAO,CAAC,aAAa,GAC3B,OAAO,MAAM,QAAQ,cAAc;YAGrC,OAAO,OAAO;QAChB;IACF;IAEF,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAC/B,IAAK,IAAI,OAAO,GAAG,OAAO,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,OACxD,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK;AAG7D","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst thElements = document.querySelectorAll('th');\nconst thText = [...thElements].map((element) => element.firstChild);\n\ndocument.addEventListener('click', (e) => {\n  const th = e.target.closest('th');\n\n  if (!th) {\n    return;\n  }\n\n  const indexColumn = thText.indexOf(th.firstChild);\n  let rows = [];\n\n  for (const row of table.rows) {\n    rows.push([...row.cells].map((element) => element.innerHTML));\n  }\n\n  rows = rows\n    .slice(1, -1)\n    .map((row) => {\n      return row.map((element) => {\n        if (element.includes('$')) {\n          return Number(element.slice(1).replace(',', ''));\n        }\n\n        return +element ? +element : element;\n      });\n    })\n    .sort((a, b) => {\n      if (typeof a[indexColumn] === 'number') {\n        return a[indexColumn] - b[indexColumn];\n      }\n\n      return a[indexColumn].localeCompare(b[indexColumn]);\n    })\n    .map((row) => {\n      return row.map((element) => {\n        if (row.indexOf(element) === 3) {\n          return '$' + element.toLocaleString();\n        }\n\n        return String(element);\n      });\n    });\n\n  for (let i = 0; i < rows.length; i++) {\n    for (let cell = 0; cell < table.rows[i + 1].cells.length; cell++) {\n      table.rows[i + 1].cells[cell].innerHTML = rows[i][cell];\n    }\n  }\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}