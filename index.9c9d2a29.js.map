{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAE/B,EAAS,EADI,SAAS,gBAAgB,CAAC,OACd,GAAG,CAAC,SAAC,CAApC,EAAgD,OAAA,EAAQ,UAAU,A,GAElE,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAM,EAAK,EAAE,MAAM,CAAC,OAAO,CAAC,MAE5B,GAAK,GAIL,IAAM,EAAc,EAAO,OAAO,CAAC,EAAG,UAAU,EAC5C,EAAO,EAAE,CAER,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAK,IAAI,CAAC,EAAI,EAAI,KAAK,EAAE,GAAG,CAAC,SAAC,CAA9B,EAA0C,OAAA,EAAQ,SAAS,A,G,C,C,M,E,CADxD,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,EAAO,EACJ,KAAK,CAAC,EAAG,IACT,GAAG,CAAC,SAAC,CAFR,EAGI,OAAO,EAAI,GAAG,CAAC,SAAC,CAAhB,SACE,AAAI,EAAQ,QAAQ,CAAC,KACZ,OAAO,EAAQ,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,KAGvC,CAAC,EAAU,CAAC,EAAU,CAC/B,EACF,GACC,IAAI,CAAC,SAAC,CAAA,CAAG,CADV,QAEE,AAAI,AAA0B,UAA1B,OAAO,CAAC,CAAC,EAAY,CAChB,CAAC,CAAC,EAAY,CAAG,CAAC,CAAC,EAAY,CAGjC,CAAC,CAAC,EAAY,CAAC,aAAa,CAAC,CAAC,CAAC,EAAY,CACpD,GACC,GAAG,CAAC,SAAC,CADN,EAEE,OAAO,EAAI,GAAG,CAAC,SAAC,CAAhB,SACE,AAAI,AAAyB,IAAzB,EAAI,OAAO,CAAC,GACP,IAAM,EAAQ,cAAc,GAG9B,OAAO,EAChB,EACF,GAEF,IAAK,IAAI,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAC/B,IAAK,IAAI,EAAO,EAAG,EAAO,EAAM,IAAI,CAAC,EAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAE,IACxD,EAAM,IAAI,CAAC,EAAI,EAAE,CAAC,KAAK,CAAC,EAAK,CAAC,SAAS,CAAG,CAAI,CAAC,EAAE,CAAC,EAAK,CAG7D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar thElements = document.querySelectorAll(\"th\");\nvar thText = _to_consumable_array(thElements).map(function(element) {\n    return element.firstChild;\n});\ndocument.addEventListener(\"click\", function(e) {\n    var th = e.target.closest(\"th\");\n    if (!th) return;\n    var indexColumn = thText.indexOf(th.firstChild);\n    var rows = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            rows.push(_to_consumable_array(row.cells).map(function(element) {\n                return element.innerHTML;\n            }));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    rows = rows.slice(1, -1).map(function(row) {\n        return row.map(function(element) {\n            if (element.includes(\"$\")) return Number(element.slice(1).replace(\",\", \"\"));\n            return +element ? +element : element;\n        });\n    }).sort(function(a, b) {\n        if (typeof a[indexColumn] === \"number\") return a[indexColumn] - b[indexColumn];\n        return a[indexColumn].localeCompare(b[indexColumn]);\n    }).map(function(row) {\n        return row.map(function(element) {\n            if (row.indexOf(element) === 3) return \"$\" + element.toLocaleString();\n            return String(element);\n        });\n    });\n    for(var i = 0; i < rows.length; i++)for(var cell = 0; cell < table.rows[i + 1].cells.length; cell++)table.rows[i + 1].cells[cell].innerHTML = rows[i][cell];\n});\n\n//# sourceMappingURL=index.9c9d2a29.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst thElements = document.querySelectorAll('th');\nconst thText = [...thElements].map((element) => element.firstChild);\n\ndocument.addEventListener('click', (e) => {\n  const th = e.target.closest('th');\n\n  if (!th) {\n    return;\n  }\n\n  const indexColumn = thText.indexOf(th.firstChild);\n  let rows = [];\n\n  for (const row of table.rows) {\n    rows.push([...row.cells].map((element) => element.innerHTML));\n  }\n\n  rows = rows\n    .slice(1, -1)\n    .map((row) => {\n      return row.map((element) => {\n        if (element.includes('$')) {\n          return Number(element.slice(1).replace(',', ''));\n        }\n\n        return +element ? +element : element;\n      });\n    })\n    .sort((a, b) => {\n      if (typeof a[indexColumn] === 'number') {\n        return a[indexColumn] - b[indexColumn];\n      }\n\n      return a[indexColumn].localeCompare(b[indexColumn]);\n    })\n    .map((row) => {\n      return row.map((element) => {\n        if (row.indexOf(element) === 3) {\n          return '$' + element.toLocaleString();\n        }\n\n        return String(element);\n      });\n    });\n\n  for (let i = 0; i < rows.length; i++) {\n    for (let cell = 0; cell < table.rows[i + 1].cells.length; cell++) {\n      table.rows[i + 1].cells[cell].innerHTML = rows[i][cell];\n    }\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","thText","querySelectorAll","map","element","firstChild","addEventListener","e","th","target","closest","indexColumn","indexOf","rows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","row","value","push","cells","innerHTML","err","return","includes","Number","replace","sort","a","b","localeCompare","toLocaleString","String","cell"],"version":3,"file":"index.9c9d2a29.js.map"}